---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: regapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: regapp
  template:
    metadata:
      labels:
        app: regapp
    spec:
      volumes:
        - name: static-data
          emptyDir: {}
      # initContainers:
      #   - name: check-db-ready
      #     image: postgres:alpine
      #     # command: ['sh', '-c', 'pg_isready;set']
      #     command: ['sh', '-c',
      #       'until pg_isready -d $DB_URL;
      #       do echo waiting for database; sleep 2; done;
      #       set']
      #     env:
      #       - name: DB_URL
      #         valueFrom:
      #           secretKeyRef:
      #             name: regapp-postgres-ha-pguser-regapp-postgres-ha
      #             key: uri
      containers:
        - name: regapp-container
          # image: regapp:latest
          image: ghcr.io/nerc-project/regapp:master
          # image: image-registry.openshift-image-registry.svc:5000/regapp/regapp:latest
          # imagePullPolicy: IfNotPresent
          imagePullPolicy: Always
          workingDir: "/code"
          command:
            - "/scripts/entrypoint.sh"
          envFrom:
            - configMapRef:
                name: regapp-configmap
            - secretRef:
                name: regapp-secrets
          env:
            - name: DB_URL
              valueFrom:
                secretKeyRef:
                  name: regapp-postgres-ha-pguser-regapp-postgres-ha
                  key: uri
          ports:
            - containerPort: 8123
          volumeMounts:
            - name: static-data
              mountPath: /static
